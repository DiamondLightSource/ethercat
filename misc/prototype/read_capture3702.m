% Matlab program to read a capture
% generated by capture.c
function capture = read_capture3702(fname)
%
% returns a structure with these components
%    data - sensor data
%    counter - counter data
%    fname - file name where the data was read from
%    elem_size - size of the sensor data, in bytes
%    no_samples - number of samples
%    no_batches - number of samples
%    oversampling_factor - 
%    update_rate - update rate in microseconds
%   

capture.data = [];
capture.counter = [];
file = fopen(fname,'r');
checks.header = 'ETHERCAT CAPTURE FILE 3702-v1.3';
checks.tail = 'END OF CAPTURE FILE 3702';
checks.header_read = fread(file, length(checks.header));
if (strcmp(char(checks.header_read'),checks.header))
    disp('header okay');
else
    disp('header not okay');
    fclose(file);
    return
end
buflen = fread(file, 1, 'int32');
buffer = fread(file, buflen, 'schar');
disp(char(buffer'));
capture.fname = fname;
capture.header = checks.header;
capture.elem_size =         fread(file, 1, 'int32');
capture.no_samples =        fread(file, 1, 'uint32');
capture.no_batches =        fread(file, 1, 'uint32');
capture.oversampling_factor =        fread(file, 1, 'int32');
capture.update_rate =       fread(file, 1, 'int32');
type = 'int32';
switch capture.elem_size
    case 2
        type = 'uint16';
    otherwise
        disp(sprintf('unexpected element size %d',capture.elem_size));
        return
end
capture.data = fread(file, capture.no_samples, type);
capture.counter = fread(file, capture.no_batches, 'uint16');
checks.tail_read = fread(file, length(checks.tail),'schar');
if (strcmp(char(checks.tail_read'), checks.tail))
    disp('tail okay');
else
    disp('tail not okay');
end

fclose(file);
return
