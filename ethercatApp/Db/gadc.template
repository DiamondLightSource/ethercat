# ethercat gadc.template
# % macro, DEVICE, EtherCAT slave
# % macro, CHANNEL, ADC channel
# % macro, PORT, asyn port for EtherCAT slave
# % macro, SAMPLES, number of samples in waveform
# % macro, SCAN, polling period
# % macro, INTSCAN, polling period for the INTERRUPT parameter
# % macro, name, name for gui element
# % gui, $(name=), edm, AdcControl.edl, DEVICE=$(DEVICE),CHANNEL=$(CHANNEL)


record(longout, "$(DEVICE):ADC$(CHANNEL)_CHANBUFF")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT)_ADC$(CHANNEL))CHANBUFF")
   field(DOL,  "10000000")
   field(PINI, "YES")
}

record(longout, "$(DEVICE):ADC$(CHANNEL)_INFO")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT)_ADC$(CHANNEL))INFO")
   field(PINI, "YES")
}

record(longout, "$(DEVICE):ADC$(CHANNEL)_SAMPLES")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT)_ADC$(CHANNEL))SAMPLES")
   field(DOL,  "$(SAMPLES)")
   field(PINI, "YES")
}

record(longout, "$(DEVICE):ADC$(CHANNEL)_OFFSET")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT)_ADC$(CHANNEL))OFFSET")
}

record(mbbo, "$(DEVICE):ADC$(CHANNEL)_MODE")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT)_ADC$(CHANNEL))MODE")
   field(ZRVL, "0")
   field(ONVL, "1")
   field(TWVL, "2")
   field(ZRST, "CONTINUOUS")
   field(ONST, "TRIGGERED")
   field(TWST, "GATED")
   field(PINI, "YES")
   field(VAL,  "0")
}

record(longout, "$(DEVICE):ADC$(CHANNEL)_TRIGGER")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT)_ADC$(CHANNEL))TRIGGER")
}

record(longout, "$(DEVICE):ADC$(CHANNEL)_CAPTURE")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT)_ADC$(CHANNEL))CAPTURE")
   field(DOL,  "1")
   field(PINI, "YES")
}

record(longout, "$(DEVICE):ADC$(CHANNEL)_AVERAGE")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT)_ADC$(CHANNEL))AVERAGE")
}

record(waveform, "$(DEVICE):ADC$(CHANNEL)_WAVEFORM")
{
    field(DTYP, "asynInt32ArrayIn")
    field(NELM, "$(SAMPLES)")
    field(SCAN, "I/O Intr")
    field(FTVL, "LONG")
    field(INP,  "@asyn($(PORT)_ADC$(CHANNEL))WAVEFORM")
}

record(longin, "$(DEVICE):ADC$(CHANNEL)_BUFFERCOUNT")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT)_ADC$(CHANNEL))BUFFERCOUNT")
   field(SCAN, "1 second")
}

# % archiver 10 Monitor
record(longin, "$(DEVICE):ADC$(CHANNEL)_VALUE")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT)_ADC$(CHANNEL))VALUE")
   field(SCAN, "$(SCAN)")
}

record(mbbi, "$(DEVICE):ADC$(CHANNEL)_STATE")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT)_ADC$(CHANNEL))STATE")
   field(SCAN, "$(SCAN)")
   field(ZRVL, "0")
   field(ONVL, "1")
   field(TWVL, "2")
   field(ZRST, "WAITING")
   field(ONST, "TRIGGERED")
   field(TWST, "DONE")

}

record(bi, "$(DEVICE):ADC$(CHANNEL)_ENABLED_R")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT)_ADC$(CHANNEL))ENABLED")
   field(SCAN, "$(SCAN)")
   field(ZNAM, "DISABLED")
   field(ONAM, "ENABLED")
}

record(bo, "$(DEVICE):ADC$(CHANNEL)_ENABLED")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT)_ADC$(CHANNEL))ENABLED")
   field(ZNAM, "DISABLED")
   field(ONAM, "ENABLED")
   field(PINI, "YES")
   field(VAL,  "0")
}

record(bo, "$(DEVICE):ADC$(CHANNEL)_RETRIGGER")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT)_ADC$(CHANNEL))RETRIGGER")
   field(ZNAM, "DISABLED")
   field(ONAM, "ENABLED")
   field(PINI, "YES")
   field(VAL,  "1")
}

record(longout, "$(DEVICE):ADC$(CHANNEL)_INTERRUPT")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT)_ADC$(CHANNEL))INTERRUPT")
   field(SCAN, "$(INTSCAN)")
}

record(longout, "$(DEVICE):ADC$(CHANNEL)_CLEAR")
{
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT)_ADC$(CHANNEL))CLEAR")
}
