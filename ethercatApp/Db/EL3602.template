
# template generated by maketemplate.py 
# from XML files at ../../etc/xml
# for device EL3602 revision 0x100000 
#
# % macro, DEVICE, device name
# % macro, PORT,   asyn port for device
# % macro, SCAN,   scan rate
# % gui, $(name=), edmembed, EL3602-embed.edl, DEVICE=$(DEVICE)

record(mbbi, "$(DEVICE):AL_STATE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AL_STATE")
  field("SCAN", "$(SCAN)")
  field("ONVL", "1")
  field("TWVL", "2")
  field("THVL", "4")
  field("FRVL", "8")
  field("ONST", "INIT")
  field("TWST", "PREOP")
  field("THST", "SAFEOP")
  field("FRST", "OP")
}

record(longin, "$(DEVICE):ERROR_FLAG")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ERROR_FLAG")
  field("SCAN", "$(SCAN)")
}


record(longin, "$(DEVICE):INPUT1:LIMIT1")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AIInputsChannel1.Limit1")
  field("SCAN", "$(SCAN)")
}


record(longin, "$(DEVICE):INPUT1:LIMIT2")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AIInputsChannel1.Limit2")
  field("SCAN", "$(SCAN)")
}


record(ai, "$(DEVICE):INPUT1:VALUE")
{
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT))AIInputsChannel1.Value")
  field(SCAN, "$(SCAN)")
  field(EGUF, "10")
  field(EGUL, "-10")
  field(LINR, "LINEAR")
}


record(longin, "$(DEVICE):INPUT2:LIMIT1")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AIInputsChannel2.Limit1")
  field("SCAN", "$(SCAN)")
}


record(longin, "$(DEVICE):INPUT2:LIMIT2")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AIInputsChannel2.Limit2")
  field("SCAN", "$(SCAN)")
}


record(ai, "$(DEVICE):INPUT2:VALUE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AIInputsChannel2.Value")
  field("SCAN", "$(SCAN)")
  field("EGUF", "10")
  field("EGUL", "-10")
  field(LINR, "LINEAR")
}

record(bi, "$(DEVICE):INPUT1:UNDERRANGE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AIInputsChannel1.Underrange")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):INPUT1:OVERRANGE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AIInputsChannel1.Overrange")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):INPUT1:ERROR")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AIInputsChannel1.Error")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):INPUT1:TXPDOSTATE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AIInputsChannel1.TxPDOState")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):INPUT1:TXPDOTOGGLE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AIInputsChannel1.TxPDOToggle")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):INPUT2:UNDERRANGE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AIInputsChannel2.Underrange")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):INPUT2:OVERRANGE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AIInputsChannel2.Overrange")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):INPUT2:ERROR")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AIInputsChannel2.Error")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):INPUT2:TXPDOSTATE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AIInputsChannel2.TxPDOState")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):INPUT2:TXPDOTOGGLE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AIInputsChannel2.TxPDOToggle")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}

