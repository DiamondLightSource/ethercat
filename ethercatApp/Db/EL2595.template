
# template generated by maketemplate.py 
# from XML files at etc/xml
# for device EL2595 revision 0x120000 
# non-default pdo assignments: 0x1601
#
# % macro, DEVICE, device name
# % macro, PORT,   asyn port for device
# % macro, SCAN,   scan rate
# % macro, DRVL,   drive high limit for current output
# % macro, DRVH,   drive low limit for current output
# % macro, name,   name for gui component
# % macro, label,  name for embedded button

# % gui, $(name=EL2595), edmembed, el2595-embed.edl, DEVICE=$(DEVICE),label=$(label)
# % gui, $(name=EL2595), edm, el2595.edl, DEVICE=$(DEVICE)

record(longout, "$(DEVICE):DOXCURRENT:OUTPUTCURRENT")
{
  field("DTYP", "asynInt32")
  field("DESC", "$(label)")
  field("OUT",  "@asyn($(PORT))DOXCurrent.Outputcurrent")
  field("OMSL", "supervisory")
  field("DRVH", "$(DRVH)")
  field("DRVL", "$(DRVL)")
  field("HOPR", "$(DRVH)")
  field("LOPR", "$(DRVL)")
}

record(mbbi, "$(DEVICE):AL_STATE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AL_STATE")
  field("SCAN", "$(SCAN)")
  field("ONVL", "1")
  field("TWVL", "2")
  field("THVL", "4")
  field("FRVL", "8")
  field("ONST", "INIT")
  field("TWST", "PREOP")
  field("THST", "SAFEOP")
  field("FRST", "OP")
}


record(longin, "$(DEVICE):ERROR_FLAG")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ERROR_FLAG")
  field("SCAN", "$(SCAN)")
}


record(bi, "$(DEVICE):DOXSTATUS:STATUS__READYTOACTIVATE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))DOXStatus.Status__Readytoactivate")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):DOXSTATUS:STATUS__OUTPUTACTIVE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))DOXStatus.Status__Outputactive")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):DOXSTATUS:STATUS__WARNING")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))DOXStatus.Status__Warning")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):DOXSTATUS:SERROR")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))DOXStatus.Status__Error")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):DOXSTATUS:STATUS__DIGITALINPUT")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))DOXStatus.Status__Digitalinput")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):DOXSTATUS:STXPDOTOGGLE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))DOXStatus.Status__TxPDOToggle")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bo, "$(DEVICE):DOXCONTROL:CONTROL__OUTPUT")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))DOXControl.Control__Output")
  field("OMSL", "supervisory")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bo, "$(DEVICE):DOXCONTROL:CONTROL__INPUTTRIGGERENABLE")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))DOXControl.Control__Inputtriggerenable")
  field("OMSL", "supervisory")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bo, "$(DEVICE):DOXCONTROL:CONTROL__RESET")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))DOXControl.Control__Reset")
  field("OMSL", "supervisory")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}

record(bo, "$(DEVICE):OUTPUT_VOLTAGE_READ")
{
   field(DTYP, "asynInt32")
   field(OUT, "@asyn($(PORT)_SDO)voltage_trig")
   field(VAL, "1")
   field(TPRO, "1")
}

record(longin, "$(DEVICE):OUTPUT_VOLTAGE:RBV")
{
   field(DTYP, "asynInt32")
   field(INP, "@asyn($(PORT)_SDO)voltage")
   field(TPRO, "1")
}

record(longin, "$(DEVICE):OUTPUT_VOLTAGE:STAT")
{
   field(DTYP, "asynInt32")
   field(INP, "@asyn($(PORT)_SDO)voltage_stat")
   field(TPRO, "1")
}

record(longout, "$(DEVICE):OUTPUT_VOLTAGE")
{
   field(DTYP, "asynInt32")
   field(OUT, "@asyn($(PORT)_SDO)voltage")
   field(OMSL, "supervisory")
   field(TPRO, "1")
}
