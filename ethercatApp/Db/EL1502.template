
# template generated by maketemplate.py 
# from XML files at ../../etc/xml
# for device EL1502 revision 0x120000 
#
# % macro, DEVICE, device name
# % macro, PORT,   asyn port for device
# % macro, SCAN,   scan rate


record(mbbi, "$(DEVICE):AL_STATE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AL_STATE")
  field("SCAN", "$(SCAN)")
  field("ONVL", "1")
  field("TWVL", "2")
  field("THVL", "4")
  field("FRVL", "8")
  field("ONST", "INIT")
  field("TWST", "PREOP")
  field("THST", "SAFEOP")
  field("FRST", "OP")
}


record(longin, "$(DEVICE):ERROR_FLAG")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ERROR_FLAG")
  field("SCAN", "$(SCAN)")
}


record(longin, "$(DEVICE):CNTINPUTS:COUNTERVALUE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))CNTInputs.Countervalue")
  field("SCAN", "$(SCAN)")
}


record(bi, "$(DEVICE):CNTINPUTS:ENABLED")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))CNTInputs.Status__Outputfunctionsenabled")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):CNTINPUTS:SOUTPUT")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))CNTInputs.Status__Statusofoutput")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):CNTINPUTS:DONE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))CNTInputs.Status__Setcounterdone")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):CNTINPUTS:INHIBITED")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))CNTInputs.Status__Counterinhibited")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):CNTINPUTS:SINPUTUD")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))CNTInputs.Status__StatusofinputUD")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):CNTINPUTS:SINPUTCLOCK")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))CNTInputs.Status__Statusofinputclock")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):CNTINPUTS:SSYNCERROR")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))CNTInputs.Status__Syncerror")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):CNTINPUTS:STXPDOTOGGLE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))CNTInputs.Status__TxPDOToggle")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(longout, "$(DEVICE):CNTOUTPUTS:SET")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))CNTOutputs.Setcountervalue")
  field("OMSL", "supervisory")
}


record(bo, "$(DEVICE):CNTOUTPUTS:ENABLE")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))CNTOutputs.Control__Enableoutputfunctions")
  field("OMSL", "supervisory")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bo, "$(DEVICE):CNTOUTPUTS:CSETOUTPUT")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))CNTOutputs.Control__Setoutput")
  field("OMSL", "supervisory")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bo, "$(DEVICE):CNTOUTPUTS:CSETCOUNTER")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))CNTOutputs.Control__Setcounter")
  field("OMSL", "supervisory")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bo, "$(DEVICE):CNTOUTPUTS:INHIBIT")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))CNTOutputs.Control__Inhibitcounter")
  field("OMSL", "supervisory")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}

